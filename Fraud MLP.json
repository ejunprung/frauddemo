{"paragraphs":[{"text":"%md\n### Imports\n","dateUpdated":"2018-03-05T00:30:53+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Imports</h3>\n"}]},"apps":[],"jobName":"paragraph_1520209853477_2005066103","id":"20180305-000256_1748068544","dateCreated":"2018-03-05T00:30:53+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:555"},{"text":"%pyspark\nimport skil\nimport numpy as np\nimport pandas as pd\nimport random\nfrom sklearn import preprocessing\nfrom keras.models import Sequential\nfrom keras.utils import np_utils\nfrom keras.layers.core import Dense, Activation, Dropout\nfrom keras.optimizers import SGD","user":"admin","dateUpdated":"2018-03-05T00:43:04+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520209853477_2005066103","id":"20180305-000254_757635495","dateCreated":"2018-03-05T00:30:53+0000","dateStarted":"2018-03-05T00:43:04+0000","dateFinished":"2018-03-05T00:43:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:556"},{"text":"%md\n### Data Processing","dateUpdated":"2018-03-05T00:30:53+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Data Processing</h3>\n"}]},"apps":[],"jobName":"paragraph_1520209853477_2005066103","id":"20180305-000352_2076429863","dateCreated":"2018-03-05T00:30:53+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:557"},{"title":"Skil Context","text":"%pyspark\n\n# Set seed\nrandom.seed(123)\n\n# Read in data\ndf = pd.read_csv('https://bpstore1.blob.core.windows.net/anomalydetection/fraud.csv')\n\n# Convert character data to categorical data\ndf['type'] =  df['type'].astype('category')\ndf['nameOrig'] =  df['nameOrig'].astype('category')\ndf['nameDest'] =  df['nameDest'].astype('category')\ndf['step'] = df['step'].astype('float')\ndf['isFlaggedFraud'] = df['isFlaggedFraud'].astype('float')\n\ncat_columns = df.select_dtypes(['category']).columns\ndf[cat_columns] = df[cat_columns].apply(lambda x: x.cat.codes)\n\n# Convert integer type to float\ndf['type'] =  df['type'].astype('float')\ndf['nameOrig'] =  df['nameOrig'].astype('float')\ndf['nameDest'] =  df['nameDest'].astype('float')\n\n# Scale data between 0 and 1\nx = df.values \nmin_max_scaler = preprocessing.MinMaxScaler()\nx_scaled = min_max_scaler.fit_transform(x)\ndf = pd.DataFrame(x_scaled, columns = [\"step\", \"type\", \"amount\", \"nameOrig\", \n    \"oldbalanceOrg\", \"newbalanceOrig\", \"nameDest\", \"oldbalanceDest\", \"newbalanceDest\", \n    \"isFraud\", \"isFlaggedFraud\"])\n\n# Number of classes 1, 0: legitimate, 1:fraud\nnum_classes = 1\n\n# Create training data\nX_train = df.loc[1:100000, ['step','type', 'amount', 'nameOrig', 'oldbalanceOrg', 'newbalanceOrig','nameDest' , 'oldbalanceDest', 'newbalanceDest', 'isFlaggedFraud']]\ny_train = df.loc[1:100000, ['isFraud']]\n\nX_train = np.array(X_train)\ny_train = np.array(y_train)","user":"admin","dateUpdated":"2018-03-05T00:43:06+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520209853478_2006220350","id":"20180304-042527_185192258","dateCreated":"2018-03-05T00:30:53+0000","dateStarted":"2018-03-05T00:43:06+0000","dateFinished":"2018-03-05T00:43:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:558"},{"text":"%md\n\n### MLP model","dateUpdated":"2018-03-05T00:30:53+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>MLP model</h3>\n"}]},"apps":[],"jobName":"paragraph_1520209853478_2006220350","id":"20180305-000756_1813516393","dateCreated":"2018-03-05T00:30:53+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:559"},{"text":"%pyspark\n\n# Create model\nmodel = Sequential()\nmodel.add(Dense(50, activation='relu', input_shape=(10,)))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(50, activation='relu'))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(num_classes, activation='sigmoid'))\nsgd = SGD(lr=0.001, decay=1e-6, momentum=0.9, nesterov=True)\n\nmodel.compile(optimizer=sgd, loss='binary_crossentropy', metrics=['accuracy'])\n\n","user":"admin","dateUpdated":"2018-03-05T00:43:09+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520209853478_2006220350","id":"20180305-000658_1563509526","dateCreated":"2018-03-05T00:30:53+0000","dateStarted":"2018-03-05T00:43:09+0000","dateFinished":"2018-03-05T00:43:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:560"},{"text":"%pyspark\n\n# Train model and weight fraud and legitimate cases \n\nclass_weight = {0 : 1.,\n    1: len(df.index)/sum(df['isFraud']),\n    2: 2.}\n\nmodel.fit(X_train, y_train, epochs=3, batch_size=16, validation_split=0.1, verbose=2, class_weight = class_weight)\n","user":"admin","dateUpdated":"2018-03-05T00:47:25+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Train on 90000 samples, validate on 10000 samples\nEpoch 1/3\n - 10s - loss: 0.8716 - acc: 0.9448 - val_loss: 1.7144 - val_acc: 0.9426\nEpoch 2/3\n - 10s - loss: 0.8050 - acc: 0.9503 - val_loss: 2.4013 - val_acc: 0.9983\nEpoch 3/3\n - 10s - loss: 0.8036 - acc: 0.9589 - val_loss: 1.8832 - val_acc: 0.9699\n<keras.callbacks.History object at 0x7fd275407e50>\n"}]},"apps":[],"jobName":"paragraph_1520209853478_2006220350","id":"20180305-000829_1757721453","dateCreated":"2018-03-05T00:30:53+0000","dateStarted":"2018-03-05T00:47:25+0000","dateFinished":"2018-03-05T00:47:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:561"},{"text":"%md\n\n### Add Model to Experiemnt","dateUpdated":"2018-03-05T00:30:53+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Add Model to Experiemnt</h3>\n"}]},"apps":[],"jobName":"paragraph_1520209853478_2006220350","id":"20180305-000929_1963549404","dateCreated":"2018-03-05T00:30:53+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:562"},{"text":"%pyspark\n\nskilContext = skil.SkilContext(sc)\nmodel_id = skilContext.addModelToExperiment(z, model)","user":"admin","dateUpdated":"2018-03-05T00:43:22+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520209853478_2006220350","id":"20180304-042527_569215221","dateCreated":"2018-03-05T00:30:53+0000","dateStarted":"2018-03-05T00:43:22+0000","dateFinished":"2018-03-05T00:44:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:563"},{"text":"%pyspark\n# Create testing data\nX_test = df.loc[100001:110000, ['step','type', 'amount', 'nameOrig', 'oldbalanceOrg', 'newbalanceOrig','nameDest' , 'oldbalanceDest', 'newbalanceDest', 'isFlaggedFraud']]\ny_test = df.loc[100001:110000, ['isFraud']]\n\nX_test = np.array(X_test)\ny_test = np.array(y_test)","user":"admin","dateUpdated":"2018-03-05T00:48:01+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1520209853478_2006220350","id":"20180305-001230_1466723212","dateCreated":"2018-03-05T00:30:53+0000","dateStarted":"2018-03-05T00:48:01+0000","dateFinished":"2018-03-05T00:48:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:564"},{"text":"%pyspark\nscore = model.evaluate(X_test, y_test, verbose=0)\nprint('Test loss:', score[0])\nprint('Test accuracy:', score[1])\n","user":"admin","dateUpdated":"2018-03-05T00:48:03+0000","config":{"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"editorSetting":{"language":"python"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"('Test loss:', 0.2935140049934387)\n('Test accuracy:', 0.9708)\n"}]},"apps":[],"jobName":"paragraph_1520209853479_2005835601","id":"20180305-001315_1372977644","dateCreated":"2018-03-05T00:30:53+0000","dateStarted":"2018-03-05T00:48:03+0000","dateFinished":"2018-03-05T00:48:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:566"},{"text":"%pyspark\n","user":"admin","dateUpdated":"2018-03-05T00:45:29+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520210729123_-901085191","id":"20180305-004529_137677541","dateCreated":"2018-03-05T00:45:29+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1721"}],"name":"Fraud MLP","id":"2D88VDGB2","angularObjects":{"2D9577PF1:existing_process":[],"2D86VT151:existing_process":[],"2D7PUMBZ1:existing_process":[],"2D7V8B4SM:existing_process":[],"2D6JWT1U6:existing_process":[],"2D8S4RU7Z:existing_process":[],"2D9YYJMG9:existing_process":[],"2D86WT5A7:existing_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}